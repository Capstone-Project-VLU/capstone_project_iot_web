import Swal from "sweetalert2";
import {
  getGardenByDevice,
  addMemberByIdDevice,
  removeMemberByIdDevice,
} from "../../api/deviceApi"; // Import the API function to update device members

// SweetAlert2 popup function to add a device
export const addDevicePopup = (member, fetchUserDevices) => {
  // üëà Accept function as a parameter
  const retryFunction = async () => {
    Swal.fire({
      title: "Vui l√≤ng nh·∫≠p m√£ thi·∫øt b·ªã",
      input: "text",
      inputPlaceholder: "ID: 43528132",
      showCancelButton: true,
      confirmButtonText: "K·∫øt n·ªëi",
      cancelButtonText: "H·ªßy",
      inputValidator: (value) => {
        if (!value) return "H√£y nh·∫≠p m√£ thi·∫øt b·ªã!";
      },
    }).then(async (result) => {
      if (result.isConfirmed) {
        const deviceId = result.value;
        // console.log(deviceId);
        // console.log(member.userId);
        try {
          await addMemberByIdDevice(deviceId, {
            userId: member.userId,
            role: "member",
          });
          fetchUserDevices(); // ‚úÖ Fix: Use the function from props
          Swal.fire("Th√†nh c√¥ng!", "K·∫øt n·ªëi th√†nh c√¥ng!", "success");
        } catch (error) {
          // console.error("Error checking device:", error);
          Swal.fire({
            title: "Th·∫•t b·∫°i",
            text: "Thi·∫øt b·ªã kh√¥ng t·ªìn t·∫°i",
            icon: "error",
            confirmButtonText: "Th·ª≠ l·∫°i",
          }).then((result) => {
            if (result.isConfirmed) retryFunction();
          });
        }
      }
    });
  };
  retryFunction();
};

export const apiResponseHandler = (message) => {
  Swal.fire({
    icon: "error",
    title: "Oops...",
    text: message || "Something went wrong!",
  });
};

export const removeDevicePopup = (deviceId, userId, onSuccess) => {
  Swal.fire({
    title: "B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a thi·∫øt b·ªã n√†y kh√¥ng?",
    text: "Thi·∫øt b·ªã s·∫Ω b·ªã x√≥a vƒ©nh vi·ªÖn!",
    icon: "warning",
    showCancelButton: true,
    confirmButtonText: "X√≥a",
    cancelButtonText: "H·ªßy",
  }).then(async (result) => {
    if (result.isConfirmed) {
      try {
        await removeMemberByIdDevice(deviceId, userId);
        Swal.fire("ƒê√£ x√≥a!", "Thi·∫øt b·ªã ƒë√£ ƒë∆∞·ª£c x√≥a.", "success");
        if (onSuccess) onSuccess(); // Trigger a callback if provided
      } catch (error) {
        apiResponseHandler("Failed to remove device. Please try again.");
      }
    }
  });
};
